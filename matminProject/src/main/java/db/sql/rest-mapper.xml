<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="searchKeywordList">
		SELECT
       REST_NO
     , REST_NAME
     , NVL(ROUND(REST_AVG, 1), 0) "REST_AVG"
     , NVL(HEART,0) "HEART"
     , REST_IMG_URL
     , REST_ADDRESS
     , LOCAL_NAME
     , MENU_NAME
     , REVIEW_COUNT
     , REP_MENU
     , REST_STATUS
  FROM (
        SELECT
               REST_NO
             , REST_NAME
             , AVG(REVIEW_AVG) "REST_AVG"
             , REST_IMG_URL
             , REST_ADDRESS
             , LOCAL_NAME
             , MENU_NAME
             , REP_MENU
             , REST_STATUS
          FROM (
               SELECT
                      REST.REST_NO
                    , REST_NAME
                    , NVL(ROUND(REVIEW_RATE, 1), 0) AS "REVIEW_AVG"
                    , REST_IMG_URL
                    , REST_ADDRESS
                    , LOCAL_NAME
                    , MENU_NAME
                    , REP_MENU
                    , REST_STATUS
                 FROM REST
                 LEFT JOIN REVIEW ON (REST.REST_NO = REVIEW.REST_NO)
                 JOIN LOCATION ON (LOCAL_ID = REST_LOCAL_ID)
                 LEFT JOIN MENU ON (REST.REST_NO = MENU.REST_NO AND REP_MENU = 'Y')
               )
         GROUP
            BY REST_NO
             , REST_NAME
             , REST_IMG_URL
             , REST_ADDRESS
             , LOCAL_NAME
             , MENU_NAME
             , REP_MENU
             , REST_STATUS
        )
  LEFT JOIN (
            SELECT
                   REST_NO
                 , COUNT(*) "HEART"
              FROM HEART
             GROUP
                BY REST_NO
            ) USING(REST_NO)
  LEFT JOIN (
            SELECT
                   REST_NO
                 , COUNT(*) "REVIEW_COUNT"
              FROM REVIEW
             GROUP
                BY REST_NO
            ) USING(REST_NO)           
 WHERE (REST_NAME LIKE '%' || ? || '%'
    OR LOCAL_NAME LIKE '%' || ? || '%'
    OR MENU_NAME LIKE '%' || ? || '%')
   AND REST_STATUS = 'Y' 
 ORDER
    BY REST_AVG DESC, REVIEW_COUNT DESC
	</entry>

	<entry key="selectRestList">
		SELECT
		       REST_NO
		     , REST_NAME
		     , ROUND(AVG(REVIEW_AVG), 1) "REST_AVG"
		     , REST_IMG_URL
		     , LOCAL_NAME
		     , COUNT(REVIEW_NO) AS REVIEW_COUNT
		     , REST_STATUS
		  FROM (
		       SELECT
		              REST_NO
		            , REST_NAME
		            , NVL(ROUND(REVIEW_RATE, 1), 0) AS "REVIEW_AVG"
		            , REST_IMG_URL
		            , LOCAL_NAME
		            , REVIEW_NO
		            , REST_STATUS
		         FROM REST
		         LEFT JOIN REVIEW USING(REST_NO)
		         JOIN LOCATION ON (REST_LOCAL_ID = LOCAL_ID)
		       )
		 GROUP
		    BY REST_NO
		     , REST_NAME
		     , REST_IMG_URL
		     , LOCAL_NAME
		     , REST_STATUS
		HAVING LOCAL_NAME = ?
		   AND REST_STATUS = 'Y'
		 ORDER
		    BY REST_AVG DESC , REVIEW_COUNT DESC
	</entry>

	<entry key="selectAllRestList">
		SELECT *
    FROM (
        SELECT ROWNUM RNUM , A.*
        FROM(
        SELECT
            REST_NO
            ,LOCAL_NAME
            ,REST_NAME
            ,CTG_NAME
            ,REST_ADDRESS
            ,REST_TEL
            ,REST_AVG
        FROM REST R
        JOIN LOCATION ON (REST_LOCAL_ID = LOCAL_ID)
        JOIN CATEGORY USING (CTG_ID)
        WHERE R.REST_STATUS = 'Y'
            ) A
            )
            WHERE RNUM BETWEEN ? AND ?
		
		</entry>
	
		<entry key="selectRestCount">
		SELECT 
			COUNT(*) count
			FROM REST
		WHERE REST_STATUS = 'Y'
		
		</entry>
		
		<entry key="selectBannerRestList">
		 	<![CDATA[
				SELECT
				       REST_NO
				     , REST_NAME
				     , ROUND(AVG(REVIEW_AVG), 1) "REST_AVG"
				     , REST_IMG_URL
				     , COUNT(REVIEW_NO) AS REVIEW_COUNT
				     , MENU_NAME
				     , MENU_PRICE
				     , LOCAL_NAME
				     , REST_STATUS
				  FROM (
				       SELECT
				              REST_NO
				            , REST_NAME
				            , NVL(ROUND(REVIEW_RATE, 1), 0) AS "REVIEW_AVG"
				            , REST_IMG_URL
				            , REVIEW_NO
				            , MENU_NAME
				            , MENU_PRICE
				            , LOCAL_NAME
				            , REST_STATUS
				         FROM REVIEW
				         RIGHT JOIN REST USING(REST_NO)
				         LEFT JOIN MENU USING(REST_NO)
				         LEFT JOIN LOCATION ON (REST_LOCAL_ID = LOCAL_ID)
				        WHERE REP_MENU = 'Y'
				       )
				 WHERE (
				            ( ? = 'ban_btn1' AND MENU_PRICE <= 7000 ) OR
				            ( ? = 'ban_btn2' AND MENU_PRICE > 7000 AND MENU_PRICE <= 12000 ) OR
				            ( ? = 'ban_btn3' AND MENU_PRICE > 12000 AND MENU_PRICE <= 20000) OR
				            ( ? = 'ban_btn4' AND MENU_PRICE > 20000 AND MENU_PRICE <= 35000) OR
				            ( ? = 'ban_btn5' AND MENU_PRICE > 35000)
				       )
				   AND REST_STATUS = 'Y'
				 GROUP
				    BY REST_NO
				     , REST_NAME
				     , REST_IMG_URL
				     , MENU_NAME
				     , MENU_PRICE
				     , LOCAL_NAME
				 ORDER
				    BY REST_AVG DESC , REVIEW_COUNT DESC
	     	]]>
		</entry>

		<entry key="selectCategoryList">
		
		SELECT 
		    CTG_ID
		    ,CTG_NAME
		FROM CATEGORY
		
		</entry>
		
		<entry key="insertRest">
		INSERT 
			INTO REST
			(
			REST_NO
			,REST_LOCAL_ID
			,REST_NAME
			,CTG_ID
			,REST_ADDRESS
			,REST_TEL
			,REST_PARKING
			,REST_TIME
			,DT
			,ANIMAL
			,ROOM
			,BIG_ROOM			
			)
			VALUES
			(
			'R'||SEQ_RNO.NEXTVAL
			,?
			,?
			,?
			,?
			,?
			,?
			,?
			,?
			,?
			,?
			,?
					
			)
		
		</entry>


		<!-- 식당상세테이블용 -->
		 <entry key="selectRestDetail">
		  SELECT
		       R.REST_NO
		     , REST_NAME
		     , REST_ADDRESS
		     , REST_TEL
		     , REST_PARKING
		     , REST_GRADE
		     , REST_TIME
		     , REST_AVG
		     , REST_IMG_URL
		     , DT
		     , ANIMAL
		     , ROOM
		     , BIG_ROOM
		     , LOCAL_NAME
		     , CTG_NAME
		     , COUNT(REVIEW_NO) "REVIEW_COUNT"
		  FROM REST R
		  JOIN LOCATION ON (REST_LOCAL_ID = LOCAL_ID)
		  JOIN CATEGORY USING(CTG_ID)
		  LEFT JOIN REVIEW RV ON (R.REST_NO = RV.REST_NO AND REVIEW_STATUS = 'Y')
		 WHERE R.REST_NO = ?
		   AND REST_STATUS = 'Y'
		 GROUP
		    BY R.REST_NO
		     , REST_NAME
		     , REST_ADDRESS
		     , REST_TEL
		     , REST_X
		     , REST_Y
		     , REST_PARKING
		     , REST_GRADE
		     , REST_TIME
		     , REST_AVG
		     , REST_IMG_URL
		     , DT
		     , ANIMAL
		     , ROOM
		     , BIG_ROOM
		     , LOCAL_NAME
		     , CTG_NAME
      </entry>
		
		<entry key="rsRecommend">
			SELECT 
			       REST_NO
			     , REST_NAME
			     , REST_IMG_URL
			     , CTG_ID
			     , CTG_NAME
			     , REST_STATUS
			  FROM REST
			  JOIN CATEGORY USING (CTG_ID)
			 WHERE CTG_NAME LIKE '%'|| ? ||'%'
			   AND REST_STATUS = 'Y'
		</entry>
		
		<entry key="locationSearch">
			SELECT
			       REST_NO
			     , REST_NAME
			     , NVL(ROUND(REST_AVG, 1), 0) "REST_AVG"
			     , NVL(HEART,0) "HEART"
			     , REST_IMG_URL
			     , REST_ADDRESS
			     , LOCAL_NAME
			     , MENU_NAME
			     , REVIEW_COUNT
			     , REP_MENU
			     , CTG_NAME
			     , REST_PARKING
			    , DT
			    , ANIMAL
			    , ROOM
			    , BIG_ROOM
			    , REST_STATUS
			    
			  FROM (
			        SELECT
			               REST_NO
			             , REST_NAME
			             , AVG(REVIEW_AVG) "REST_AVG"
			             , REST_IMG_URL
			             , REST_ADDRESS
			             , LOCAL_NAME
			             , MENU_NAME
			             , REP_MENU
			             , CTG_NAME
			             , REST_PARKING
			            , DT
			            , ANIMAL
			            , ROOM
			            , BIG_ROOM
			            , REST_STATUS
			          FROM (
			               SELECT
			                      REST.REST_NO
			                    , REST_NAME
			                    , NVL(ROUND(REVIEW_RATE, 1), 0) AS "REVIEW_AVG"
			                    , REST_IMG_URL
			                    , REST_ADDRESS
			                    , LOCAL_NAME
			                    , MENU_NAME
			                    , REP_MENU
			                    , CTG_NAME
			                    , REST_PARKING
			                    , DT
			                    , ANIMAL
			                    , ROOM
			                    , BIG_ROOM
			                    , REST_STATUS
			                 FROM REST
			                 LEFT JOIN REVIEW ON(REST.REST_NO = REVIEW.REST_NO)
			                 JOIN LOCATION ON (LOCAL_ID = REST_LOCAL_ID)
			                 LEFT JOIN MENU ON (REST.REST_NO = MENU.REST_NO AND REP_MENU = 'Y')
			                 JOIN CATEGORY USING(CTG_ID)
			               )
			         GROUP
			            BY REST_NO
			             , REST_NAME
			             , REST_IMG_URL
			             , REST_ADDRESS
			             , LOCAL_NAME
			             , MENU_NAME
			             , REP_MENU
			             , CTG_NAME
			             , REST_PARKING
			            , DT
			            , ANIMAL
			            , ROOM
			            , BIG_ROOM
			            , REST_STATUS
			        )
			  LEFT JOIN (
			            SELECT
			                   REST_NO
			                 , COUNT(*) "HEART"
			              FROM HEART
			             GROUP
			                BY REST_NO
			            ) USING(REST_NO)
			  LEFT JOIN (
			            SELECT
			                   REST_NO
			                 , COUNT(*) "REVIEW_COUNT"
			              FROM REVIEW
			             GROUP
			                BY REST_NO
			            ) USING(REST_NO)           
			 WHERE (
			         REST_NAME LIKE '%' || ? || '%'
			         OR LOCAL_NAME LIKE '%' || ? || '%'
			         OR MENU_NAME LIKE '%' || ? || '%'
			       )
			AND LOCAL_NAME LIKE '%' || ? || '%'
			AND CTG_NAME LIKE '%' || ? || '%'
			AND REST_STATUS = 'Y'

		</entry>
		
		<entry key="selectMenuList">
		SELECT 
			    MENU_NAME,
			    TO_CHAR(MENU_PRICE, 'FM999,999') "MENU_PRICE",
			    REP_MENU
			FROM REST
			JOIN MENU USING (REST_NO)
			WHERE REST_NO = ?
		</entry>
		
		
		
		
		<entry key="selectLocationList">
		
		SELECT 
		    LOCAL_ID
		    ,LOCAL_NAME
		FROM LOCATION
		
		</entry>
		
		<entry key="updateRest">
			UPDATE 
				REST
			  SET 
			  	  REST_LOCAL_ID = ?
			  	, REST_NAME = ?
				, CTG_ID = ?
				, REST_ADDRESS = ?
				, REST_TEL = ?
				, REST_PARKING = ?
				, REST_TIME = ?
				, ANIMAL = ?
				, ROOM = ?
				, BIG_ROOM = ?
				, DT = ?
			WHERE REST_NO = ?
		
		</entry>
		
		<entry key="insertRestAt">
		
		INSERT 
			INTO IMG_FILE
			(
			 IMG_FILE_NO
			,REF_NO
			,IMG_ORIGIN_NAME
			,IMG_CHANGE_NAME
			,IMG_FILE_PATH
			)
		VALUES
			(
			 'F'||SEQ_FNO.NEXTVAL
			,'R'||SEQ_RNO.CURRVAL
			,?
			,?
			,?
			)
		
		</entry>

		<entry key="selectRestMain">
			SELECT
					 R.REST_NO
		           , REST_NAME
		           , REST_ADDRESS
		           , REST_TEL
		           , REST_PARKING
		           , REST_GRADE
		           , REST_TIME
		           , REST_AVG
		           , REST_IMG_URL
		           , LOCAL_NAME
		           , COUNT(REVIEW_NO) "REVIEW_COUNT"
		           , DT
		           , ANIMAL
		           , ROOM
		           , BIG_ROOM
		           , CTG_NAME
		           , COUNT(H.MEM_NO) AS "HEART_COUNT"
		           , MENU_NAME
		           , TO_CHAR(MENU_PRICE, 'FM999,999') "MENU_PRICE"
		        FROM REST R
		        JOIN LOCATION ON (REST_LOCAL_ID = LOCAL_ID)
		        JOIN CATEGORY USING(CTG_ID)
		        LEFT JOIN REVIEW RV ON (R.REST_NO = RV.REST_NO AND REVIEW_STATUS = 'Y')
		        LEFT JOIN HEART H ON R.REST_NO = H.REST_NO
		        LEFT JOIN (
		                   SELECT
		                          MENU_NO
		                        , REST_NO
		                        , MENU_NAME
		                        , MENU_PRICE
		                        , REP_MENU
		                     FROM MENU
		                     WHERE REP_MENU = 'Y'
		             ) TB1 ON (R.REST_NO = TB1.REST_NO)
		       WHERE R.REST_NO = ?
		         AND REST_STATUS = 'Y'
		       GROUP
		          BY R.REST_NO
		           , REST_NAME
		           , REST_ADDRESS
		           , REST_TEL
		           , REST_PARKING
		           , REST_GRADE
		           , REST_TIME
		           , REST_AVG
		           , REST_IMG_URL
		           , DT
		           , ANIMAL
		           , ROOM
		           , BIG_ROOM
		           , LOCAL_NAME
		           , CTG_NAME
		           , MENU_NAME
		           , MENU_PRICE
		           , REP_MENU
		
		
		</entry>
		
		 <entry key = "insertMenu">
 
	INSERT 
	    INTO MENU
	        (
	        MENU_NO
	        , REST_NO
	        , MENU_NAME
	        , MENU_PRICE
	        , REP_MENU
	        )
	    VALUES(
	         'MN'||SEQ_MNNO.NEXTVAL
	        ,'R'||SEQ_RNO.CURRVAL
	        , ?
	        , ?
	        , ?
	        )
 
 
 		</entry>
 		
 		<entry key="updateRestAt">
		 UPDATE 
		        IMG_FILE
		    SET IMG_ORIGIN_NAME = ?
		      , IMG_CHANGE_NAME = ?
		      , IMG_FILE_PATH = ?
		  WHERE IMG_FILE_NO = ?
		</entry>
		
		<entry key="insertUpdateRestAt">
			INSERT 
			       INTO IMG_FILE
			       (
			         IMG_FILE_NO
			       , REF_NO
			       , IMG_ORIGIN_NAME
			       , IMG_CHANGE_NAME
			       , IMG_FILE_PATH
			       )
			       VALUES
			       (
			         'F'||SEQ_FNO.NEXTVAL
			       , ?
			       , ?
			       , ?
			       , ?
			       )
		
		</entry>
		<entry key="contentRestList">
			SELECT
			        REST_NO
			      , REST_NAME
			      , REST_IMG_URL
			      , CTG_NAME
			      , NVL(ROUND(AVG(REVIEW_RATE), 1), 0) "REST_AVG"
			      , COUNT(REVIEW_NO) "REVIEW_COUNT"
			      , REST_STATUS
			  FROM REST
			  LEFT JOIN REVIEW USING(REST_NO)
			  LEFT JOIN CATEGORY USING(CTG_ID)
			 WHERE REST_STATUS = 'Y'
			 GROUP BY 
			        REST_NO
			      , REST_NAME
			      , REST_IMG_URL
			      , CTG_NAME
			      , REST_STATUS
			 ORDER
			    BY REST_AVG DESC, REVIEW_COUNT DESC
		</entry>
		
		<entry key="bannerSearch">
			<![CDATA[
				SELECT
				       REST_NO
				     , REST_NAME
				     , ROUND(AVG(REVIEW_AVG), 1) "REST_AVG"
				     , REST_IMG_URL
				     , COUNT(REVIEW_NO) AS REVIEW_COUNT
				     , MENU_NAME
				     , MENU_PRICE
				     , LOCAL_NAME
				     , REST_STATUS
				    FROM (
				       SELECT
				              REST_NO
				            , REST_NAME
				            , NVL(ROUND(REVIEW_RATE, 1), 0) AS "REVIEW_AVG"
				            , REST_IMG_URL
				            , REVIEW_NO
				            , MENU_NAME
				            , MENU_PRICE
				            , LOCAL_NAME
				            , REST_STATUS
				         FROM REVIEW
				         RIGHT JOIN REST USING(REST_NO)
				         LEFT JOIN MENU USING(REST_NO)
				         LEFT JOIN LOCATION ON(REST_LOCAL_ID = LOCAL_ID)
				        WHERE REP_MENU = 'Y'
				       )
				     WHERE (
				                ( ? = 'ban_btn1' AND MENU_PRICE <= 7000 ) OR
				                ( ? = 'ban_btn2' AND MENU_PRICE > 7000 AND MENU_PRICE <= 12000 ) OR
				                ( ? = 'ban_btn3' AND MENU_PRICE > 12000 AND MENU_PRICE <= 20000) OR
				                ( ? = 'ban_btn4' AND MENU_PRICE > 20000 AND MENU_PRICE <= 35000) OR
				                ( ? = 'ban_btn5' AND MENU_PRICE > 35000)
				           )
				      AND REST_STATUS = 'Y'
				      AND LOCAL_NAME LIKE ?
				    GROUP
				    BY REST_NO
				     , REST_NAME
				     , REST_IMG_URL
				     , MENU_PRICE
				     , MENU_NAME
				     , LOCAL_NAME
				    ORDER
				    BY REST_AVG DESC , REVIEW_COUNT DESC
	     	]]>
		</entry>
		
		<entry key="selectAttachment">
		SELECT 
		       IMG_FILE_NO
		     , IMG_ORIGIN_NAME
		     , IMG_CHANGE_NAME
		     , IMG_FILE_PATH
		  FROM IMG_FILE
		 WHERE REF_NO = ?
		
		</entry>
		
		<entry key="deleteRest">
      
      UPDATE REST
         SET REST_STATUS = 'N'
      WHERE REST_NO = ?   

      </entry>
      
      <entry key="updateRepMenu">
      
      UPDATE MENU
      	SET MENU_NAME = ?,
      		MENU_PRICE = ?
      WHERE MENU_NO = ?
      AND REP_MENU = 'Y'		
      
      
      </entry>
      
      
      <entry key="updateSubMenu">
      
      UPDATE MENU
      	SET MENU_NAME = ?,
      		MENU_PRICE = ?
      WHERE MENU_NO = ?
      AND REP_MENU = 'N'		
      
      
      </entry>
      
      <entry key="insertAddMenu">
      
      INSERT 
      	INTO MENU 
        	(
             MENU_NO
            , REST_NO
            , MENU_NAME
            , MENU_PRICE
            , REP_MENU
            )
            VALUES
            (
            'MN'||SEQ_MNNO.NEXTVAL
            , ?
            , ?
            , ?
            , ?
            )
        
      
      </entry>
      
      <entry key="selectMenuCount">
      	SELECT
		       COUNT(REST_NO) "MENU_COUNT"
		  FROM MENU
		 WHERE REST_NO = ?
      </entry>
      
      <entry key="selectMenuByAdmin">
      	SELECT
		       REST_NO
		     , MENU_NAME
		     , MENU_PRICE
		     , REP_MENU
		  FROM MENU
		 WHERE REST_NO = ?
      </entry>
      
      <entry key="recentRestList">
      	SELECT
		        REST_NO
		      , REST_NAME
		      , REST_IMG_URL
		  FROM REST
		 WHERE REST_NO = ?
	  </entry>
	  
      <entry key="selectRestImg">
      SELECT 
             REST_IMG_URL 
        FROM REST
       WHERE REST_NO = ?
      </entry>
      
      <entry key="selectMenuNo">
	      SELECT 
		       MENU_NO
		  FROM MENU
		 WHERE REST_NO = ?  
      </entry>
      
      <entry key="deleteRestMenu">
	       DELETE
			 FROM MENU
			WHERE MENU_NO = ? 
      </entry>
		
</properties>